/> inputOnKeyPress (event event:Event) _
    ? [!= event.key 'Enter']
        << _
    . todos:new()
    . todos:update()

/> inputOnBlur () _
    . todos:new()
    . todos:update()

/> toggleAllOnClick () _
    = completed [!= todos:completedCount todos:tasks.length]
    @ todos:tasks task
        ? [!= task.completed completed]
            . todos:taskToggle(task task)
    . todos:update()

/> toggleOnClick (task todos:Task) _
    . todos:taskToggle(task task)
    . todos:update()

/> destroyOnClick (task todos:Task) _
    . array:remove(array todos:tasks member task)
    . dom:remove(element task.liElement)
    ? task.completed
        = todos:completedCount {- todos:completedCount 1}
    . todos:update()

/> filterAllOnClick () _
    . dom:addClass(element todos:filterAllElement class %selected)
    . dom:removeClass(element todos:filterActiveElement class %selected)
    . dom:removeClass(element todos:filterCompletedElement class %selected)
    = todos:filter todos:Filter(none true)
    . todos:update()

/> filterActiveOnClick () _
    . dom:removeClass(element todos:filterAllElement class %selected)
    . dom:addClass(element todos:filterActiveElement class %selected)
    . dom:removeClass(element todos:filterCompletedElement class %selected)
    = todos:filter todos:Filter(completed true)
    . todos:update()

/> filterCompletedOnClick () _
    . dom:removeClass(element todos:filterAllElement class %selected)
    . dom:removeClass(element todos:filterActiveElement class %selected)
    . dom:addClass(element todos:filterCompletedElement class %selected)
    = todos:filter todos:Filter(notCompleted true)
    . todos:update()

/> clearCompletedOnClick () _
    @ todos:tasks task
        ? [! task.completed]
            @^
        . array.remove(array todos:tasks member todo)
        . dom:remove(element task.liElement)
        = todos:completedCount {- todos:completedCount 1}
    . todos:update()
