@inputOnKeyPress(event event:Event)_
	if (!= event.key 'Enter')
		<<
	do todos:new()
	do todos:update()

@inputOnBlur()_
	do todos:new()
	do todos:update()

@toggleAllOnClick()_
	>> completed (!= todos:completedCount todos:tasks.length)
	loop todos:tasks task
		if (!= task.completed completed)
			do todos:taskToggle(task task)
	do todos:update()

@toggleOnClick(context dom:ElementEventContext)_
	do todos:taskToggle(task context.task)
	do todos:update()

@destroyOnClick(context dom:ElementEventContext)_
	do array.remove(array todos:tasks member context.task)
	do dom:remove(element context.task.liElement)
	if context.task.completed
		>> todos:completedCount (- todos:completedCount 1)
	do todos:update()

@filterAllOnClick()_
	do dom:addClass(element todos:filterAllElement class 'selected')
	do dom:removeClass(element todos:filterActiveElement class 'selected')
	do dom:removeClass(element todos:filterCompletedElement class 'selected')
	>> todos:filter todos:Filter(none true)
	do todos:update()

@filterActiveOnClick()_
	do dom:removeClass(element todos:filterAllElement class 'selected')
	do dom:addClass(element todos:filterActiveElement class 'selected')
	do dom:removeClass(element todos:filterCompletedElement class 'selected')
	>> todos:filter todos:Filter(completed true)
	do todos:update()

@filterCompletedOnClick()_
	do dom:removeClass(element todos:filterAllElement class 'selected')
	do dom:removeClass(element todos:filterActiveElement class 'selected')
	do dom:addClass(element todos:filterCompletedElement class 'selected')
	>> todos:filter todos:Filter(notCompleted true)
	do todos:update()

@clearCompletedOnClick()_
	loop todos:tasks task
		if (none task.completed)
			continue
		do array.remove(array todos:tasks member todo)
		do dom:remove(element task.liElement)
		>> todos:completedCount (- todos:completedCount 1)
	do todos:update()
