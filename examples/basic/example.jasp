! This is a comment

(fib . num < num)
    ? (~ (= n 0) (= n -1))
        < 0
    ? (= n 1)
        < 1
    < (+
        n
        (fib . (- n 1))
        (fib . (- n 2)))

(onload)
    . (log:info . 'Initializing store {(fib . 12)}')
    = store (basic:Store loading true)

    = james 6

    . (log:info . 'Render react nodes {(* james 8)}')

    = store (basic:Store
        success (basic:StoreSuccess
            user (basic:User name 'Harry')
            location (basic:Location locationId 46)))

    . (React:render
        root (basic:getElement id 'react-root')
        nodes (basic:App
            props (basic:AppProps store store)
            children _))

| Store
    loading bool
    failed Error
    success basic:StoreSuccess
|

& StoreSuccess
    user basic:User
    location basic:Location
&

function (getElement id str < dom:HTMLElement)
    if (id == null) return undefined;
    return document.getElementById(id);
;;

+ DropId num

(drop ids [basic:DropId] hassle bool)
    @ ids id i
        . (log:info . id)
    @ 10 i
        ? hassle
            . (log:info . i)

(setPace
    paces {bool}
    id basic:DropId
    pace bool
    < {bool}
)
    < ({bool} .. paces #id pace)

$ largPrim num
    < (* 19 849 2029)

$ myArray [num]
    = a ([num] . 1 . 2 . 48 . 3 . 92 . 3 . 3 . 4 . 2 . 1 . 2 . 3 . 405 . 392 . 203 . 40)
    @ a n i
        = a ([num] .. a #i (* n 44))
    < a

(shift array [`T] member `T < [`T])
    < ([`T] . member .. array)
